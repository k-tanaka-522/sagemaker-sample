AWSTemplateFormatVersion: '2010-09-09'
Description: 'SageMaker Notebook Stack - Manages SageMaker notebook instances'

# ========================================
# パラメータセクション
# ========================================
Parameters:
  NotebookInstanceName:
    Type: String
    Description: 'Name of the SageMaker notebook instance'
  
  InstanceType:
    Type: String
    Description: 'Instance type for the notebook'
  
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: 'Subnet ID for the notebook instance'
  
  SecurityGroupId:
    Type: String
    Description: 'Security group ID for the notebook instance'
  
  IamRoleArn:
    Type: String
    Description: 'IAM role ARN for SageMaker execution'
  
  VolumeSize:
    Type: Number
    Description: 'EBS volume size in GB'
  
  DefaultS3Bucket:
    Type: String
    Default: ''
    Description: 'Default S3 bucket name (optional)'
  
  ProjectName:
    Type: String
    Description: 'Project name'
  
  Environment:
    Type: String
    Description: 'Environment name'

# ========================================
# 条件セクション
# ========================================
Conditions:
  # S3バケットが指定されているかチェック
  HasDefaultS3Bucket: !Not [!Equals [!Ref DefaultS3Bucket, '']]

# ========================================
# リソースセクション
# ========================================
Resources:
  # SageMakerノートブックインスタンス（標準リソース）
  SageMakerNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      # ノートブックインスタンスの設定
      NotebookInstanceName: !Ref NotebookInstanceName
      InstanceType: !Ref InstanceType
      RoleArn: !Ref IamRoleArn
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupId
      VolumeSizeInGB: !Ref VolumeSize
      # パブリックサブネット用設定（学習・デモ用）
      DirectInternetAccess: Enabled   # WebUIアクセスのため有効化
      RootAccess: Enabled             # パッケージインストールのため有効化
      
      # オプション設定
      # DefaultCodeRepository: !If
      #   - HasDefaultS3Bucket
      #   - !Sub 's3://${DefaultS3Bucket}/notebooks/'
      #   - !Ref 'AWS::NoValue'
      
      # ライフサイクル設定（テスト用に無効化）
      # LifecycleConfigName: !Ref NotebookLifecycleConfig
      
      # タグ設定
      Tags:
        - Key: Name
          Value: !Ref NotebookInstanceName
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: ManagedBy
          Value: CloudFormation
  
  # ノートブックのライフサイクル設定（テスト用に無効化）
  # NotebookLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      NotebookInstanceLifecycleConfigName: !Sub '${NotebookInstanceName}-lifecycle-config'
      OnCreate:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -e
              
              # ========================================
              # 起動時のセットアップスクリプト
              # ========================================
              
              # 環境変数の設定
              echo "export ENVIRONMENT=${Environment}" >> /home/ec2-user/.bashrc
              echo "export PROJECT_NAME=${ProjectName}" >> /home/ec2-user/.bashrc
              echo "export AWS_DEFAULT_REGION=${AWS::Region}" >> /home/ec2-user/.bashrc
              
              # JupyterLabの拡張機能をインストール
              sudo -u ec2-user -i <<'EOF'
              source /home/ec2-user/anaconda3/bin/activate
              
              # Git拡張機能
              pip install --upgrade jupyterlab-git
              jupyter labextension install @jupyterlab/git
              
              # 変数インスペクター
              pip install --upgrade lckr-jupyterlab-variableinspector
              
              # コード整形ツール
              pip install --upgrade jupyterlab_code_formatter
              pip install --upgrade black isort
              jupyter labextension install @ryantam626/jupyterlab_code_formatter
              jupyter serverextension enable --py jupyterlab_code_formatter
              
              # テーマ
              jupyter labextension install @jupyterlab/theme-dark-extension
              jupyter labextension install @jupyterlab/theme-light-extension
              
              EOF
              
              # カスタムPythonパッケージのインストール
              sudo -u ec2-user -i <<'EOF'
              source /home/ec2-user/anaconda3/bin/activate
              
              # データサイエンス関連パッケージ
              pip install --upgrade pandas numpy scikit-learn matplotlib seaborn plotly
              
              # AWS関連パッケージ
              pip install --upgrade boto3 sagemaker awscli
              
              # 機械学習フレームワーク
              pip install --upgrade tensorflow torch torchvision xgboost lightgbm
              
              EOF
              
              # Gitの設定
              sudo -u ec2-user -i <<'EOF'
              git config --global user.name "SageMaker User"
              git config --global user.email "sagemaker@example.com"
              git config --global init.defaultBranch main
              EOF
              
              # サンプルノートブックの作成
              sudo -u ec2-user -i <<'EOF'
              mkdir -p /home/ec2-user/SageMaker/samples
              
              cat > /home/ec2-user/SageMaker/samples/welcome.ipynb <<'NOTEBOOK'
              {
               "cells": [
                {
                 "cell_type": "markdown",
                 "metadata": {},
                 "source": [
                  "# Welcome to SageMaker Notebook\n",
                  "\n",
                  "Environment: ${Environment}\n",
                  "Project: ${ProjectName}\n",
                  "\n",
                  "This notebook instance has the following pre-installed:\n",
                  "- TensorFlow\n",
                  "- PyTorch\n",
                  "- Scikit-learn\n",
                  "- XGBoost\n",
                  "- Other data science related libraries"
                 ]
                },
                {
                 "cell_type": "code",
                 "execution_count": null,
                 "metadata": {},
                 "outputs": [],
                 "source": [
                  "import sagemaker\n",
                  "import boto3\n",
                  "import pandas as pd\n",
                  "import numpy as np\n",
                  "\n",
                  "# Initialize SageMaker session\n",
                  "session = sagemaker.Session()\n",
                  "role = sagemaker.get_execution_role()\n",
                  "region = boto3.Session().region_name\n",
                  "\n",
                  "print(f'SageMaker role ARN: {role}')\n",
                  "print(f'AWS region: {region}')"
                 ]
                }
               ],
               "metadata": {
                "kernelspec": {
                 "display_name": "Python 3",
                 "language": "python",
                 "name": "python3"
                }
               },
               "nbformat": 4,
               "nbformat_minor": 4
              }
              NOTEBOOK
              
              EOF
              
              echo "Notebook setup completed successfully!"
      
      OnStart:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -e
              
              # ========================================
              # 起動時の処理
              # ========================================
              
              # CloudWatchログの設定
              echo "Setting up CloudWatch logging..."
              
              # JupyterLabの設定を更新
              sudo -u ec2-user -i <<'EOF'
              jupyter notebook --generate-config
              echo "c.NotebookApp.contents_manager_class = 'notebook.services.contents.largefilemanager.LargeFileManager'" >> /home/ec2-user/.jupyter/jupyter_notebook_config.py
              EOF
              
              echo "Notebook started successfully!"

# ========================================
# 出力セクション
# ========================================
Outputs:
  NotebookInstanceId:
    Description: 'SageMaker notebook instance ID'
    Value: !Ref SageMakerNotebookInstance
  
  NotebookInstanceName:
    Description: 'SageMaker notebook instance name'
    Value: !Ref NotebookInstanceName
  
  NotebookInstanceUrl:
    Description: 'SageMaker notebook instance URL'
    Value: !Sub 'https://console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/${NotebookInstanceName}'